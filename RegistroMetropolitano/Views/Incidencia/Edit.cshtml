@model RegistroMetropolitano.Models.Incidencia

@{
    ViewBag.Tittle = "Edit";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        //var tippp = document.getElementById('Tipos');
        $(document).ready(function () {
            $('#ModalidadIncidencia').empty();
            $('#ModalidadIncidencia').empty();
            $("#UnidadAtencion").change(function () {
                if ($("#UnidadAtencion").val() != "Seleccionar") {
                    $('#SubTipoIncidencia').empty();
                    $('#ModalidadIncidencia').empty();
                    //$('#pintarTipos').empty();
                    //$('#pintarST').empty();
                    //$('#pintarMod').empty();
                    var UnidadOptions = {};
                    UnidadOptions.url = "/Incidencia/Tipos";
                    UnidadOptions.type = "POST";
                    UnidadOptions.data = JSON.stringify({ Unidad: $("#UnidadAtencion").val() });
                    UnidadOptions.datatype = "json";
                    UnidadOptions.contentType = "application/json";
                    UnidadOptions.success = function (ListTipos) {
                        $("#TipoIncidencia").empty();
                        for (var i = 0; i < ListTipos.length; i++) {
                            $("#TipoIncidencia").append("<option>" + ListTipos[i] + "</option > ");
                        }
                        $("#TipoIncidencia").prop("disabled", false);
                    };
                    UnidadOptions.error = function () { alert("Error Obteniendo los !!"); };
                    $.ajax(UnidadOptions);
                }
                else {
                    $("#TipoIncidencia").empty();
                    $('#SubTipoIncidencia').empty();
                    $('#Modalidad').empty();
                    $("#TipoIncidencia").prop("disabled", true);
                }

            });
            $('#Distrito').prop("disabled", true);
            $("#Mancomunidad").change(function () {
                $('#Distrito').prop("disabled", false);
                $('#Distrito').empty();
                if ($("#Mancomunidad").val() != "Seleccionar") {
                    var UnidadOptions = {};
                    UnidadOptions.url = "/Incidencia/Distrito";
                    UnidadOptions.type = "POST";
                    UnidadOptions.data = JSON.stringify({ Mancomunidad: $("#Mancomunidad").val() });
                    UnidadOptions.datatype = "json";
                    UnidadOptions.contentType = "application/json";
                    UnidadOptions.success = function (ListDistritos) {
                        $("#Distrito").empty();
                        for (var i = 0; i < ListDistritos.length; i++) {
                            $("#Distrito").append("<option>" + ListDistritos[i] + "</option > ");
                        }
                        $("#Distrito").prop("disabled", false);
                    };
                    UnidadOptions.error = function () { alert("Error Obteniendo los !!"); };
                    $.ajax(UnidadOptions);
                }
                else {
                    $("#Distrito").prop("disabled", true);
                }

            });

            $('#TipoIncidencia').on('change', function () {
                $("#SubTipoIncidencia").prop("disabled", false);
                //$('#pintarTipos').val($("#Tipos option:selected").text());
                $('#SubTipoIncidencia').empty();
                $('#ModalidadIncidencia').empty();
                $('#Modalidad').empty();
                var text_select = $("#TipoIncidencia option:selected").text();

                switch (text_select) {
                    case "ACCIDENTES DE TRANSITO":

                        $('#SubTipoIncidencia').append('<option value="">SELECCIONAR</option>')
                        $('#SubTipoIncidencia').append('<option value="ATROPELLO">ATROPELLO</option>')
                        $('#SubTipoIncidencia').append('<option value="CHOQUE">CHOQUE</option>')
                        $('#SubTipoIncidencia').append('<option value="INCENDIO DE VEHICULO">INCENDIO DE VEHICULO</option>')
                        $('#SubTipoIncidencia').append('<option value="DESPISTE">DESPISTE</option>')
                        $('#SubTipoIncidencia').append('<option value="VOLCADURA">VOLCADURA</option>')
                        $('#SubTipoIncidencia').append('<option value="CAÍDA DE PASAJERO">CAÍDA DE PASAJERO</option>')

                        break;


                    default:
                }
            })

            $('#SubTipoIncidencia').on('change', function () {
                $("#ModalidadIncidencia").prop("disabled", false);
                $('#ModalidadIncidencia').empty();
                var text_select = $("#SubTipoIncidencia option:selected").text();

                switch (text_select) {

                    case "ATROPELLO":

                        $('#ModalidadIncidencia').append('<option value="">Seleccionar</option>')
                        $('#ModalidadIncidencia').append('<option value="Daños Materiales">Daños Materiales</option>')
                        $('#ModalidadIncidencia').append('<option value="Lesiones Leves">Lesiones Leves</option>')
                        $('#ModalidadIncidencia').append('<option value="Lesiones Graves">Lesiones Graves</option>')
                        $('#ModalidadIncidencia').append('<option value="Fatales">Fatales</option>')

                        break;

                    default:
                }

            })

        });

        $(document).ready(function () {
            $('ul.tabs li a:first').addClass('active');
            $('.secciones article').hide();
            $('.secciones article:first').show();

            $('ul.tabs li a').click(function () {
                $('ul.tabs li a').removeClass('active');
                $(this).addClass('active');
                $('.secciones article').hide();

                var activeTab = $(this).attr('href');
                $(activeTab).show();
                return false;
            });
        });

    </script>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Incidencia</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IncidenciaID)

            <div class="form-group">
                @Html.LabelFor(model => model.UnidadAtencion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnidadAtencion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnidadAtencion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TipoIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TipoIncidencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SubTipoIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SubTipoIncidencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubTipoIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModalidadIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModalidadIncidencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModalidadIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Mancomunidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Mancomunidad", ViewData["Distrito"] as SelectList, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Distrito", new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <select id="Distrito" name="Distrito" class="form-control"></select>
                </div>
            </div>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Turno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Turno", ViewData["Turno"] as SelectList, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Semaforizacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Semaforizacion", ViewData["Semaforizacion"] as SelectList, new { @class = "form-control" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.DireccionIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DireccionIncidencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DireccionIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactoIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContactoIncidencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactoIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TelefonoContacto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TelefonoContacto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TelefonoContacto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CargoContacto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CargoContacto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CargoContacto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InstitucionContacto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InstitucionContacto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InstitucionContacto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FuenteInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FuenteInfo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FuenteInfo, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.DescripcionIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("DescripcionIncidencia", new { rows = 7, columns = 40, @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DescripcionIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ObservacionIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("ObservacionIncidencia", new { rows = 7, columns = 40, @class = "form-control txarea" })
                    @Html.ValidationMessageFor(model => model.ObservacionIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApoyoInter, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ApoyoInter", ViewData["ApoyoI"] as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ApoyoInter, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrimerCanal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6 col-md-offset-1">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PrimerCanal)
                        @Html.ValidationMessageFor(model => model.PrimerCanal, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaIncidencia, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.FechaIncidencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstadoIncidencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("EstadoIncidencia", ViewData["Estado"] as SelectList, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar Cambios" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Volver a Reportes", "Index")
    </div>
</body>
</html>
